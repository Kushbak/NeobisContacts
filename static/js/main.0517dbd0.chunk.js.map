{"version":3,"sources":["components/Header/Header.module.css","assets/images/logo.svg","assets/images/email.svg","assets/images/internet.svg","assets/images/location.svg","assets/images/smartphone.svg","assets/images/sortAZ.svg","assets/images/sortZA.svg","components/Header/Header.jsx","api/api.js","redux/rootReducer.js","components/common/FormControls/FormControls.jsx","components/common/validators/validators.js","components/ContactInfo/ContactInfo.jsx","components/Contacts/Contacts.jsx","App.js","serviceWorker.js","index.js","assets/images/favorite.svg","assets/images/nonfavorite.svg","components/ContactInfo/ContactInfo.module.css","components/common/FormControls/FormControls.module.css","components/Contacts/Contacts.module.css"],"names":["module","exports","Header","props","className","styles","header","to","src","logo","alt","instance","axios","baseURL","initialState","users","favorites","setUsers","type","removeFavorite","favorite","setFavoritesFromLS","addToFavorites","dispatch","setFavorites","reducers","combineReducers","usersData","state","action","length","filter","item","id","form","formReducer","store","createStore","applyMiddleware","thunk","window","Input","input","meta","hasError","error","formControl","autoComplete","emailValid","value","test","numValid","ContactForms","reduxForm","submit","formData","a","changedData","firstName","user","lastName","city","country","phoneNumber","email","website","updateUsers","push","sort","b","key","localStorage","setItem","JSON","stringify","contactForms","onSubmit","handleSubmit","inputBlock","inputTitle","Field","contactInput","name","component","placeholder","validate","saveContact","compose","withRouter","connect","useState","userId","setUserId","useEffect","parse","getItem","preventFavorites","useRef","current","match","params","some","contact","map","u","contactInfo","imgBlock","image","photo","favIcon","nonfavIcon","onClick","UsersMapping","isFavorites","contactItem","textInfo","location","icon","locationIcon","number","smartphoneIcon","internetIcon","emailIcon","btnBlock","showUser","searchedUsers","setSearchedUsers","isFavoritesFilter","setFavoritesFilter","useReducer","x","forceUpdate","sortFunc","direction","sortedUsers","contactsBlock","actionBars","search","searchInput","onChange","e","fullName","fullNameReverse","toLowerCase","target","searchFunc","actionButtons","favoritesFilter","sortIconAZ","sortIconZA","contacts","App","React","memo","getUsers","exact","path","render","get","then","res","data","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.0517dbd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Wm0b7\",\"logo\":\"Header_logo__vSV7w\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b6f07fb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.295e814c.svg\";","module.exports = __webpack_public_path__ + \"static/media/internet.99f89efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.06a791e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/smartphone.30eebe89.svg\";","module.exports = __webpack_public_path__ + \"static/media/sortAZ.c25fea94.svg\";","module.exports = __webpack_public_path__ + \"static/media/sortZA.7126b71e.svg\";","import React from 'react';\r\nimport styles from './Header.module.css'\r\nimport logo from '../../assets/images/logo.svg'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={styles.header}>\r\n            <div className=\"wrapper\">\r\n                <div className=\"logo\">\r\n                    <NavLink to='/'>\r\n                        <img src={ logo } alt=\"logo\"/>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://my-json-server.typicode.com/RomanChasovitin/demo-api/'\r\n})\r\n\r\nexport const getUsersApi = () => instance.get('users');","import { createStore, combineReducers, applyMiddleware } from \"redux\"; \r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport thunk from \"redux-thunk\";  \r\nimport { getUsersApi } from '../api/api' \r\n\r\n\r\n\r\n\r\n// REDUCER FOR USERS \r\n\r\nlet initialState = {\r\n    users: [],\r\n    favorites: []\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_USERS':  \r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'GET_FAVORITES': \r\n            return {\r\n                ...state,\r\n                favorites: [...state.favorites, action.favorite]\r\n            }\r\n        case 'REMOVE_FAVORITE':  \r\n            return {\r\n                ...state,\r\n                favorites: state.favorites.length > 1 ? state.favorites.filter(item => item.id !== action.favorite.id) : []\r\n            }\r\n        case 'SET_FAVORITES_FROM_LS': \r\n            return {\r\n                ...state,\r\n                favorites: [...action.favorites]\r\n            }\r\n        // case 'CHANGE_CONTACT_DETAILS': \r\n        //     return {\r\n        //         ...state,\r\n        //         users: [state.find(item => item.id === action.user.id)]\r\n        //     }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//  ACTIONS FOR USERS \r\n\r\nexport const setUsers = (users) => ({ type: 'GET_USERS', users });\r\nexport const setFavorites = (favorite) => ({ type: 'GET_FAVORITES', favorite })\r\nexport const removeFavorite = (favorite) => ({ type: 'REMOVE_FAVORITE', favorite })\r\nexport const setFavoritesFromLS = (favorites) => ({ type: 'SET_FAVORITES_FROM_LS', favorites })\r\n// export const changeContactDetails = (user) => ({ type: 'CHANGE_CONTACT_DETAILS', user })\r\n\r\nexport const getUsers = () => (dispatch) => {\r\n    getUsersApi()\r\n        .then(res => { \r\n            dispatch(setUsers(res.data.data)); \r\n            localStorage.setItem('contacts', JSON.stringify(res.data.data))\r\n    })    \r\n};\r\n\r\nexport const addToFavorites = (favorite) => (dispatch) => {\r\n    dispatch(setFavorites(favorite));  \r\n}; \r\n \r\n\r\n\r\nlet reducers = combineReducers({ \r\n    usersData: usersReducer,  \r\n    form: formReducer \r\n});\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\nwindow.store = store;\r\nexport default store;","import React from 'react'; \r\nimport styles from './FormControls.module.css';  \r\n\r\nexport const Input = ({ input, meta, ...props }) => { \r\n    const hasError = meta.error\r\n    return(\r\n        <div className={ styles.formControl + ' ' + (hasError ? styles.error : '') }>\r\n            <div> <input type=\"text\" { ...input } { ...props } autoComplete=\"off\"/> </div>\r\n            { hasError && <span>{ meta.error }</span> } \r\n        </div>\r\n    )\r\n}","export const emailValid = (value) => { \r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) && !!value) { \r\n        return 'Неправильно введен email'\r\n    }\r\n}\r\n \r\nexport const numValid = (value) => {   \r\n    if(!/^\\+?[0-9]{6,16}$/i.test(value) && !!value){ \r\n        return 'Неправильно введен номер'\r\n    }\r\n};  \r\n ","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport styles from './ContactInfo.module.css'\r\nimport favIcon from '../../assets/images/favorite.svg'\r\nimport nonfavIcon from '../../assets/images/nonfavorite.svg';\r\nimport { addToFavorites, removeFavorite, setUsers, setFavoritesFromLS } from '../../redux/rootReducer'\r\nimport { Input } from '../common/FormControls/FormControls';\r\nimport { emailValid, numValid } from '../common/validators/validators';\r\n\r\n\r\nconst ContactFormsF = (props) => { \r\n    const submit = async (formData) => {\r\n        let changedData = { \r\n            firstName: formData.firstName || props.user.firstName,\r\n            lastName: formData.lastName || props.user.lastName ,\r\n            city: formData.city || props.user.city,\r\n            country: formData.country || props.user.country,\r\n            phoneNumber: formData.phoneNumber || props.user.phoneNumber,\r\n            email: formData.email || props.user.email,\r\n            website: formData.website || props.user.website\r\n        }   \r\n        let updateUsers = await props.users.filter(item => item.id !== props.user.id)\r\n        await updateUsers.push({...props.user, ...changedData});\r\n        await updateUsers.sort((a, b) => a.id - b.id);\r\n        await props.setUsers(updateUsers)\r\n        localStorage.setItem('contacts', JSON.stringify(updateUsers)) \r\n        for(let key in formData){\r\n            formData[key] = ''\r\n        }\r\n    } \r\n    return (\r\n        <div className={ styles.contactForms }>\r\n            <form onSubmit={ props.handleSubmit(submit) }>\r\n                <div className={ styles.inputBlock }>\r\n                    <p className={ styles.inputTitle }>First Name:</p>\r\n                    <Field className={ styles.contactInput } name='firstName' component={ Input } type='text' placeholder={ props.user.firstName } />\r\n                </div>\r\n                <div className={ styles.inputBlock }>\r\n                    <p className={ styles.inputTitle }>Last name:</p>\r\n                    <Field className={ styles.contactInput } name='lastName' component={ Input } type='text' placeholder={ props.user.lastName } />\r\n                </div>\r\n                <div className={ styles.inputBlock }>\r\n                    <p className={ styles.inputTitle }>City:</p>\r\n                    <Field className={ styles.contactInput } name='city' component={ Input } type='text' placeholder={ props.user.city } />\r\n                </div>\r\n                <div className={ styles.inputBlock }>\r\n                    <p className={ styles.inputTitle }>Country:</p>\r\n                    <Field className={ styles.contactInput } name='country' component={ Input } type='text' placeholder={ props.user.country } />\r\n                </div>\r\n                <div className={ styles.inputBlock }>\r\n                    <p className={ styles.inputTitle }>Phone Number:</p>\r\n                    <Field className={ styles.contactInput } name='phoneNumber' component={ Input } type='text' placeholder={ props.user.phoneNumber } validate={ [numValid] } />\r\n                </div>\r\n                <div className={ styles.inputBlock }>\r\n                    <p className={ styles.inputTitle }>Email:</p>\r\n                    <Field className={ styles.contactInput } name='email' component={ Input } type='text' placeholder={ props.user.email } validate={ [emailValid] }/>\r\n                </div>\r\n                <div className={ styles.inputBlock }>\r\n                    <p className={ styles.inputTitle }>Website:</p>\r\n                    <Field className={ styles.contactInput } name='website' component={ Input } type='text' placeholder={ props.user.website } />\r\n                </div>\r\n                <button className={ styles.saveContact } >Save Contact</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst ContactForms = reduxForm({ form: 'contactDetails' })(ContactFormsF)\r\n\r\nconst ContactInfo = (props) => {  \r\n    const [userId, setUserId] = useState()\r\n\r\n    useEffect(() => { \r\n        if(!props.favorites.length && JSON.parse(localStorage.getItem('favorites')).length){\r\n            props.setFavoritesFromLS(JSON.parse(localStorage.getItem('favorites')))\r\n        } \r\n    }, [])\r\n\r\n    const preventFavorites = useRef()\r\n    preventFavorites.current = props.favorites\r\n\r\n    useEffect(() => { \r\n        setUserId(props.match.params.userId);   \r\n    }, [])\r\n \r\n\r\n    const setFavorites = async (user) => {   \r\n        if (!props.favorites.some(item => item.id === user.id)) {\r\n            await props.addToFavorites(user)  \r\n        } else {\r\n            await props.removeFavorite(user)  \r\n        }     \r\n        localStorage.setItem('favorites', JSON.stringify(preventFavorites.current))\r\n    }  \r\n    \r\n    return (\r\n        <div className={ styles.contact }>\r\n            { props.users.map(u => {\r\n                if(u.id === +userId){\r\n                    return (\r\n                        <div className={ styles.contactInfo } key={ u.id } >\r\n                            <div className={ styles.imgBlock }>\r\n                                <img src={ u.image } alt=\"profile\" className={ styles.photo } />\r\n                                <img src={ (props.favorites.length && props.favorites.some(item => item.id === u.id)) ? favIcon : nonfavIcon } onClick={ () => setFavorites(u) } alt=\"fav\" className={ styles.favIcon }/>\r\n                            </div>\r\n                            \r\n                            <ContactForms user={ u } users={ props.users } setUsers={ props.setUsers } />\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            }) }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mstp = (state) => ({\r\n    users: state.usersData.users,\r\n    favorites: state.usersData.favorites\r\n})\r\n\r\nexport default  compose( \r\nwithRouter,\r\nconnect(mstp, { addToFavorites, removeFavorite, setUsers, setFavoritesFromLS })\r\n)(ContactInfo);","import React, { useState, useEffect, useRef, useReducer } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Contacts.module.css';\r\nimport favIcon from '../../assets/images/favorite.svg';\r\nimport nonfavIcon from '../../assets/images/nonfavorite.svg';\r\nimport emailIcon from '../../assets/images/email.svg';\r\nimport internetIcon from '../../assets/images/internet.svg';\r\nimport locationIcon from '../../assets/images/location.svg';\r\nimport smartphoneIcon from '../../assets/images/smartphone.svg';\r\nimport sortIconAZ from '../../assets/images/sortAZ.svg'; \r\nimport sortIconZA from '../../assets/images/sortZA.svg'; \r\nimport { addToFavorites, removeFavorite, setFavoritesFromLS, setUsers } from '../../redux/rootReducer';\r\n\r\n\r\nconst Contacts = ({ users, favorites, setFavoritesFromLS, addToFavorites, removeFavorite, setUsers }) => {\r\n    const [searchedUsers, setSearchedUsers] = useState();\r\n    const [isFavoritesFilter, setFavoritesFilter] = useState(false);   \r\n\r\n    const preventFavorites = useRef();\r\n    preventFavorites.current = favorites;\r\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n \r\n    useEffect(() => { \r\n        if(!favorites.length && JSON.parse(localStorage.getItem('favorites')).length){\r\n            setFavoritesFromLS(JSON.parse(localStorage.getItem('favorites')))\r\n        } \r\n    }, [favorites, setFavoritesFromLS])\r\n    \r\n    const setFavorites = async (user) => {   \r\n        if (!favorites.some(item => item.id === user.id)) {\r\n            await addToFavorites(user)  \r\n        } else {\r\n            await removeFavorite(user)  \r\n        }     \r\n        localStorage.setItem('favorites', JSON.stringify(preventFavorites.current));\r\n    }  \r\n\r\n    const searchFunc = (e) => {\r\n        setSearchedUsers(users.filter(item => {\r\n            let fullName = item.firstName + ' ' + item.lastName;\r\n            let fullNameReverse = item.lastName + ' ' + item.firstName;\r\n            return fullName.toLowerCase().search(e.target.value.toLowerCase()) !== -1\r\n                || fullNameReverse.toLowerCase().search(e.target.value.toLowerCase()) !== -1\r\n        }))\r\n    }\r\n    \r\n    // let sortedUsers = []\r\n    const sortFunc = async (direction) => {   \r\n        let sortedUsers = await users.sort((a, b) => {\r\n            if(direction){\r\n                if (a.firstName < b.firstName) return -1;\r\n                if (b.firstName < a.firstName) return 1;\r\n            } else{ \r\n                if (a.firstName > b.firstName) return -1;\r\n                if (b.firstName > a.firstName) return 1;\r\n            } \r\n        })\r\n        setUsers(sortedUsers)\r\n        forceUpdate();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={ styles.contactsBlock }>\r\n\r\n            <div className={ styles.actionBars }>\r\n                <div className={ styles.search }>\r\n                    <input type=\"text\" className={ styles.searchInput } onChange={ (e) => searchFunc(e) } placeholder='type to search...' />\r\n                </div>\r\n                <div className={ styles.actionButtons}>\r\n                    <span className= { styles.favoritesFilter } onClick={ () => setFavoritesFilter(!isFavoritesFilter) } >\r\n                        <img src={ isFavoritesFilter ? favIcon : nonfavIcon } alt=\"Favorites\" />\r\n                    </span>\r\n                    <span onClick={ () => sortFunc(true) }><img src={ sortIconAZ } alt=\"az sort\"/></span>\r\n                    <span onClick={ () => sortFunc(false) }><img src={ sortIconZA } alt=\"za sort\"/></span> \r\n                </div>\r\n            </div>\r\n\r\n            <div className={ styles.contacts}>\r\n                { searchedUsers\r\n                    ? <UsersMapping users={ searchedUsers } setFavorites={ setFavorites } isFavorites={ isFavoritesFilter } favorites={ favorites } />\r\n                    : <UsersMapping users={ users } setFavorites={ setFavorites } isFavorites={ isFavoritesFilter } favorites={ favorites } />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UsersMapping = ({ users, setFavorites, isFavorites, favorites }) => {  \r\n    let forMapping = isFavorites ? favorites : users  \r\n    return forMapping.map(u => (\r\n        <div className={ styles.contactItem } key={ u.id } >\r\n            <div className={ styles.photo }><img src={ u.image } alt=\"profile\" /></div>\r\n            <div className={ styles.textInfo }>\r\n                <p className={ styles.name }>\r\n                    { u.firstName } { u.lastName }\r\n                    <span className={ styles.favorite } onClick={ () => setFavorites(u) } >\r\n                        <img src={ (favorites.length && favorites.some(item => item.id === u.id)) ? favIcon : nonfavIcon} alt=\"favorite\" />\r\n                    </span>\r\n                </p>\r\n                <p className={ styles.location }>\r\n                    <img className={ styles.icon } src={ locationIcon } alt=\"icon\" />\r\n                    { u.city } city, { u.country }\r\n                </p>\r\n                <p className={ styles.number }>\r\n                    <img className={ styles.icon } src={ smartphoneIcon } alt=\"icon\" />\r\n                    { u.phoneNumber }\r\n                </p>\r\n                <p className={ styles.website }>\r\n                    <img className={ styles.icon } src={ internetIcon } alt=\"icon\" />\r\n                    { u.website }\r\n                </p>\r\n                <p className={ styles.email }>\r\n                    <img className={ styles.icon } src={ emailIcon } alt=\"icon\" />\r\n                    { u.email }\r\n                </p>\r\n                <div className={ styles.btnBlock }>\r\n                    <NavLink to={`/contact/${ u.id }`} className={ styles.showUser }>Show</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\n\r\nconst mstp = (state) => ({\r\n    users: state.usersData.users,\r\n    favorites: state.usersData.favorites\r\n})\r\n\r\nexport default connect(mstp, { addToFavorites, removeFavorite, setFavoritesFromLS, setUsers })(Contacts);","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport ContactInfo from './components/ContactInfo/ContactInfo';\nimport Contacts from './components/Contacts/Contacts';\nimport { getUsers, setUsers } from './redux/rootReducer';\nimport { Route } from 'react-router-dom'; \nimport { connect } from 'react-redux'; \n\nconst App = React.memo(({ setUsers, getUsers, users }) => {   \n    localStorage.getItem('favorites') == null && localStorage.setItem('favorites', JSON.stringify([]))\n    useEffect(() => {\n        let contacts = JSON.parse(localStorage.getItem('contacts'));\n        contacts ? setUsers(contacts) :getUsers()\n    }, [setUsers, getUsers]) \n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"main\">\n                <div className=\"wrapper\">\n                    <Route exact path='/' render={ () => <Contacts users={ users }/> } />\n                    <Route path='/contact/:userId' render={ () => <ContactInfo /> } /> \n                </div>\n            </div>\n        </div>\n  );\n})\n\nconst mstp = (state) => ({\n    users: state.usersData.users,\n    favorites: state.usersData.favorites\n})\n\n\n\nexport default connect(mstp, { getUsers, setUsers })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';  \nimport { Provider } from 'react-redux';\nimport store from './redux/rootReducer'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter >\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/favorite.edffeac8.svg\";","module.exports = __webpack_public_path__ + \"static/media/nonfavorite.21f320e7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgBlock\":\"ContactInfo_imgBlock__yPJx2\",\"photo\":\"ContactInfo_photo__2aAub\",\"favIcon\":\"ContactInfo_favIcon__37pSc\",\"contactForms\":\"ContactInfo_contactForms__1b_IS\",\"contactInput\":\"ContactInfo_contactInput__qyXw3\",\"saveContact\":\"ContactInfo_saveContact__1xH44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__cvhLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__2BE7K\",\"contactItem\":\"Contacts_contactItem__-VAkh\",\"textInfo\":\"Contacts_textInfo__UxqYf\",\"name\":\"Contacts_name__1R0Q_\",\"photo\":\"Contacts_photo__3GZ6d\",\"icon\":\"Contacts_icon__3S2UO\",\"favorite\":\"Contacts_favorite__1_rYG\",\"btnBlock\":\"Contacts_btnBlock__1coRQ\",\"showUser\":\"Contacts_showUser__MQ4Qf\",\"actionBars\":\"Contacts_actionBars__174XM\",\"search\":\"Contacts_search__2S7ZP\",\"searchInput\":\"Contacts_searchInput__3q72m\",\"actionButtons\":\"Contacts_actionButtons__SWl8w\",\"favoritesFilter\":\"Contacts_favoritesFilter__1jTGv\",\"sortBtn\":\"Contacts_sortBtn__RAzhO\"};"],"sourceRoot":""}